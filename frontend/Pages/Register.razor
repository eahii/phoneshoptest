@page "/register"
@using Shared.Models
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Authorization
@attribute [AllowAnonymous]

@inject HttpClient Http

<h3>Rekisteröidy</h3>

<div>
    <label>Sähköposti:</label>
    <input @bind="User.Email" />
</div>
<div>
    <label>Salasana:</label>
    <input type="password" @bind="Password" />
</div>
<div>
    <label>Etunimi:</label>
    <input @bind="User.FirstName" />
</div>
<div>
    <label>Sukunimi:</label>
    <input @bind="User.LastName" />
</div>
<div>
    <label>Osoite:</label>
    <input @bind="User.Address" />
</div>
<div>
    <label>Puhelinnumero:</label>
    <input @bind="User.PhoneNumber" />
</div>
<div>
    <button @onclick="RegisterUser">Rekisteröidy</button>
</div>

@if (!string.IsNullOrEmpty(Message))
{
    <p>@Message</p>
}

@code {
    private UserModel User { get; set; } = new UserModel();
    private string Message { get; set; } = string.Empty;
    private string Password { get; set; } = string.Empty;

    private async Task RegisterUser()
    {
        try
        {
            var userToRegister = new UserModel
                {
                    Email = User.Email,
                    PasswordHash = Password, // Plaintext password; hashing is handled in the backend
                    FirstName = User.FirstName,
                    LastName = User.LastName,
                    Address = User.Address,
                    PhoneNumber = User.PhoneNumber,
                    Role = User.Role
                };

            var response = await Http.PostAsJsonAsync("/api/auth/register", userToRegister);
            if (response.IsSuccessStatusCode)
            {
                Message = "Rekisteröinti onnistui.";
            }
            else
            {
                var error = await response.Content.ReadFromJsonAsync<ErrorResponse>();
                Message = error?.Error ?? "Rekisteröinti epäonnistui.";
            }
        }
        catch (Exception ex)
        {
            Message = $"Virhe rekisteröityessä: {ex.Message}";
        }
    }
}

@code {
    public class ErrorResponse
    {
        public string Error { get; set; }
    }
}